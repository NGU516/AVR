
IMU.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000034  00800100  00000830  000008c4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000830  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  00800134  00800134  000008f8  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000008f8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000954  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000080  00000000  00000000  00000994  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000bfb  00000000  00000000  00000a14  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007e4  00000000  00000000  0000160f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000069c  00000000  00000000  00001df3  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000128  00000000  00000000  00002490  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000778b  00000000  00000000  000025b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000026f  00000000  00000000  00009d43  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000070  00000000  00000000  00009fb2  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  00002b41  00000000  00000000  0000a022  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	33 c0       	rjmp	.+102    	; 0x68 <__ctors_end>
   2:	00 00       	nop
   4:	4c c0       	rjmp	.+152    	; 0x9e <__bad_interrupt>
   6:	00 00       	nop
   8:	4a c0       	rjmp	.+148    	; 0x9e <__bad_interrupt>
   a:	00 00       	nop
   c:	48 c0       	rjmp	.+144    	; 0x9e <__bad_interrupt>
   e:	00 00       	nop
  10:	46 c0       	rjmp	.+140    	; 0x9e <__bad_interrupt>
  12:	00 00       	nop
  14:	44 c0       	rjmp	.+136    	; 0x9e <__bad_interrupt>
  16:	00 00       	nop
  18:	42 c0       	rjmp	.+132    	; 0x9e <__bad_interrupt>
  1a:	00 00       	nop
  1c:	40 c0       	rjmp	.+128    	; 0x9e <__bad_interrupt>
  1e:	00 00       	nop
  20:	3e c0       	rjmp	.+124    	; 0x9e <__bad_interrupt>
  22:	00 00       	nop
  24:	3c c0       	rjmp	.+120    	; 0x9e <__bad_interrupt>
  26:	00 00       	nop
  28:	3a c0       	rjmp	.+116    	; 0x9e <__bad_interrupt>
  2a:	00 00       	nop
  2c:	38 c0       	rjmp	.+112    	; 0x9e <__bad_interrupt>
  2e:	00 00       	nop
  30:	36 c0       	rjmp	.+108    	; 0x9e <__bad_interrupt>
  32:	00 00       	nop
  34:	34 c0       	rjmp	.+104    	; 0x9e <__bad_interrupt>
  36:	00 00       	nop
  38:	32 c0       	rjmp	.+100    	; 0x9e <__bad_interrupt>
  3a:	00 00       	nop
  3c:	30 c0       	rjmp	.+96     	; 0x9e <__bad_interrupt>
  3e:	00 00       	nop
  40:	2e c0       	rjmp	.+92     	; 0x9e <__bad_interrupt>
  42:	00 00       	nop
  44:	2c c0       	rjmp	.+88     	; 0x9e <__bad_interrupt>
  46:	00 00       	nop
  48:	c8 c0       	rjmp	.+400    	; 0x1da <__vector_18>
  4a:	00 00       	nop
  4c:	28 c0       	rjmp	.+80     	; 0x9e <__bad_interrupt>
  4e:	00 00       	nop
  50:	26 c0       	rjmp	.+76     	; 0x9e <__bad_interrupt>
  52:	00 00       	nop
  54:	24 c0       	rjmp	.+72     	; 0x9e <__bad_interrupt>
  56:	00 00       	nop
  58:	22 c0       	rjmp	.+68     	; 0x9e <__bad_interrupt>
  5a:	00 00       	nop
  5c:	20 c0       	rjmp	.+64     	; 0x9e <__bad_interrupt>
  5e:	00 00       	nop
  60:	1e c0       	rjmp	.+60     	; 0x9e <__bad_interrupt>
  62:	00 00       	nop
  64:	1c c0       	rjmp	.+56     	; 0x9e <__bad_interrupt>
	...

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e0 e3       	ldi	r30, 0x30	; 48
  7c:	f8 e0       	ldi	r31, 0x08	; 8
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a4 33       	cpi	r26, 0x34	; 52
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a4 e3       	ldi	r26, 0x34	; 52
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a6 33       	cpi	r26, 0x36	; 54
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	b2 d0       	rcall	.+356    	; 0x200 <main>
  9c:	c7 c3       	rjmp	.+1934   	; 0x82c <_exit>

0000009e <__bad_interrupt>:
  9e:	b0 cf       	rjmp	.-160    	; 0x0 <__vectors>

000000a0 <UART_INIT>:
int16_t read_mpu9250_register16(uint8_t reg_addr);

ISR(USART_RX_vect);
//////////////////////////////////////////////////////////////////////////
void UART_INIT() {
	UBRR0H = (uint8_t)(UBRR_VALUE >> 8);
  a0:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
	UBRR0L = (uint8_t)UBRR_VALUE;
  a4:	87 e6       	ldi	r24, 0x67	; 103
  a6:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
	UCSR0B = (1 << TXEN0) | (1 << RXEN0) | (1 << RXCIE0);
  aa:	88 e9       	ldi	r24, 0x98	; 152
  ac:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
	UCSR0C = (1 << UCSZ01) | (1 << UCSZ00); // 8-bit data format
  b0:	86 e0       	ldi	r24, 0x06	; 6
  b2:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
  b6:	08 95       	ret

000000b8 <UART_Transmit_char>:
}

void UART_Transmit_char(char data) {
	while (!(UCSR0A & (1 << UDRE0)));
  b8:	e0 ec       	ldi	r30, 0xC0	; 192
  ba:	f0 e0       	ldi	r31, 0x00	; 0
  bc:	90 81       	ld	r25, Z
  be:	95 ff       	sbrs	r25, 5
  c0:	fd cf       	rjmp	.-6      	; 0xbc <UART_Transmit_char+0x4>
	UDR0 = data;
  c2:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
  c6:	08 95       	ret

000000c8 <UART_Transmit_string>:
}

void UART_Transmit_string(const char* str) {
  c8:	cf 93       	push	r28
  ca:	df 93       	push	r29
  cc:	ec 01       	movw	r28, r24
	while (*str) {
  ce:	88 81       	ld	r24, Y
  d0:	88 23       	and	r24, r24
  d2:	29 f0       	breq	.+10     	; 0xde <UART_Transmit_string+0x16>
  d4:	21 96       	adiw	r28, 0x01	; 1
		UART_Transmit_char(*str);
  d6:	f0 df       	rcall	.-32     	; 0xb8 <UART_Transmit_char>
	while (!(UCSR0A & (1 << UDRE0)));
	UDR0 = data;
}

void UART_Transmit_string(const char* str) {
	while (*str) {
  d8:	89 91       	ld	r24, Y+
  da:	81 11       	cpse	r24, r1
  dc:	fc cf       	rjmp	.-8      	; 0xd6 <UART_Transmit_string+0xe>
		UART_Transmit_char(*str);
		str++;
	}
}
  de:	df 91       	pop	r29
  e0:	cf 91       	pop	r28
  e2:	08 95       	ret

000000e4 <UART_Transmit_data>:

void UART_Transmit_data(const char* label, int16_t data) {
  e4:	0f 93       	push	r16
  e6:	1f 93       	push	r17
  e8:	cf 93       	push	r28
  ea:	df 93       	push	r29
  ec:	cd b7       	in	r28, 0x3d	; 61
  ee:	de b7       	in	r29, 0x3e	; 62
  f0:	61 97       	sbiw	r28, 0x11	; 17
  f2:	0f b6       	in	r0, 0x3f	; 63
  f4:	f8 94       	cli
  f6:	de bf       	out	0x3e, r29	; 62
  f8:	0f be       	out	0x3f, r0	; 63
  fa:	cd bf       	out	0x3d, r28	; 61
	char buffer[17];	// register length 16bit
	sprintf(buffer, "%s %d", label, data);
  fc:	7f 93       	push	r23
  fe:	6f 93       	push	r22
 100:	9f 93       	push	r25
 102:	8f 93       	push	r24
 104:	80 e0       	ldi	r24, 0x00	; 0
 106:	91 e0       	ldi	r25, 0x01	; 1
 108:	9f 93       	push	r25
 10a:	8f 93       	push	r24
 10c:	8e 01       	movw	r16, r28
 10e:	0f 5f       	subi	r16, 0xFF	; 255
 110:	1f 4f       	sbci	r17, 0xFF	; 255
 112:	1f 93       	push	r17
 114:	0f 93       	push	r16
 116:	b2 d0       	rcall	.+356    	; 0x27c <sprintf>
	UART_Transmit_string(buffer);
 118:	c8 01       	movw	r24, r16
 11a:	d6 df       	rcall	.-84     	; 0xc8 <UART_Transmit_string>
}
 11c:	0f b6       	in	r0, 0x3f	; 63
 11e:	f8 94       	cli
 120:	de bf       	out	0x3e, r29	; 62
 122:	0f be       	out	0x3f, r0	; 63
 124:	cd bf       	out	0x3d, r28	; 61
 126:	61 96       	adiw	r28, 0x11	; 17
 128:	0f b6       	in	r0, 0x3f	; 63
 12a:	f8 94       	cli
 12c:	de bf       	out	0x3e, r29	; 62
 12e:	0f be       	out	0x3f, r0	; 63
 130:	cd bf       	out	0x3d, r28	; 61
 132:	df 91       	pop	r29
 134:	cf 91       	pop	r28
 136:	1f 91       	pop	r17
 138:	0f 91       	pop	r16
 13a:	08 95       	ret

0000013c <I2C_INIT>:

void I2C_INIT() {
	TWSR = 0;  // Set prescaler to 1
 13c:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
	TWBR = ((F_CPU / 100000UL) - 16) / 2;  // Set bit rate to 100kHz
 140:	88 e4       	ldi	r24, 0x48	; 72
 142:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7f80b8>
 146:	08 95       	ret

00000148 <I2C_START>:
}

void I2C_START() {
	TWCR = (1 << TWSTA) | (1 << TWINT) | (1 << TWEN);
 148:	84 ea       	ldi	r24, 0xA4	; 164
 14a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	while (!(TWCR & (1 << TWINT)));
 14e:	ec eb       	ldi	r30, 0xBC	; 188
 150:	f0 e0       	ldi	r31, 0x00	; 0
 152:	80 81       	ld	r24, Z
 154:	88 23       	and	r24, r24
 156:	ec f7       	brge	.-6      	; 0x152 <I2C_START+0xa>
}
 158:	08 95       	ret

0000015a <I2C_STOP>:

void I2C_STOP() {
	TWCR = (1 << TWSTO) | (1 << TWINT) | (1 << TWEN);
 15a:	84 e9       	ldi	r24, 0x94	; 148
 15c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 160:	80 e1       	ldi	r24, 0x10	; 16
 162:	8a 95       	dec	r24
 164:	f1 f7       	brne	.-4      	; 0x162 <I2C_STOP+0x8>
 166:	00 c0       	rjmp	.+0      	; 0x168 <I2C_STOP+0xe>
 168:	08 95       	ret

0000016a <I2C_WRITE>:
	_delay_us(50);
}

void I2C_WRITE(uint8_t data) {
	TWDR = data;
 16a:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
	TWCR = (1 << TWINT) | (1 << TWEN);
 16e:	84 e8       	ldi	r24, 0x84	; 132
 170:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	while (!(TWCR & (1 << TWINT)));
 174:	ec eb       	ldi	r30, 0xBC	; 188
 176:	f0 e0       	ldi	r31, 0x00	; 0
 178:	80 81       	ld	r24, Z
 17a:	88 23       	and	r24, r24
 17c:	ec f7       	brge	.-6      	; 0x178 <I2C_WRITE+0xe>
}
 17e:	08 95       	ret

00000180 <I2C_READ_ACK>:

uint8_t I2C_READ_ACK() {
	TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWEA);
 180:	84 ec       	ldi	r24, 0xC4	; 196
 182:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	while (!(TWCR & (1 << TWINT)));
 186:	ec eb       	ldi	r30, 0xBC	; 188
 188:	f0 e0       	ldi	r31, 0x00	; 0
 18a:	80 81       	ld	r24, Z
 18c:	88 23       	and	r24, r24
 18e:	ec f7       	brge	.-6      	; 0x18a <I2C_READ_ACK+0xa>
	return TWDR;
 190:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
}
 194:	08 95       	ret

00000196 <I2C_READ_NACK>:

uint8_t I2C_READ_NACK() {
	TWCR = (1 << TWINT) | (1 << TWEN);
 196:	84 e8       	ldi	r24, 0x84	; 132
 198:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	while (!(TWCR & (1 << TWINT)));
 19c:	ec eb       	ldi	r30, 0xBC	; 188
 19e:	f0 e0       	ldi	r31, 0x00	; 0
 1a0:	80 81       	ld	r24, Z
 1a2:	88 23       	and	r24, r24
 1a4:	ec f7       	brge	.-6      	; 0x1a0 <I2C_READ_NACK+0xa>
	return TWDR;
 1a6:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
}
 1aa:	08 95       	ret

000001ac <read_mpu9250_register16>:

int16_t read_mpu9250_register16(uint8_t reg_addr) {
 1ac:	cf 93       	push	r28
 1ae:	df 93       	push	r29
 1b0:	c8 2f       	mov	r28, r24
	I2C_START();
 1b2:	ca df       	rcall	.-108    	; 0x148 <I2C_START>
	I2C_WRITE((MPU9250_ADDRESS << 1) | 0);
 1b4:	80 ed       	ldi	r24, 0xD0	; 208
 1b6:	d9 df       	rcall	.-78     	; 0x16a <I2C_WRITE>
	I2C_WRITE(reg_addr);
 1b8:	8c 2f       	mov	r24, r28
 1ba:	d7 df       	rcall	.-82     	; 0x16a <I2C_WRITE>
	I2C_START();
 1bc:	c5 df       	rcall	.-118    	; 0x148 <I2C_START>
	I2C_WRITE((MPU9250_ADDRESS << 1) | 1);
 1be:	81 ed       	ldi	r24, 0xD1	; 209
 1c0:	d4 df       	rcall	.-88     	; 0x16a <I2C_WRITE>
	int16_t data = (I2C_READ_ACK() << 8) | I2C_READ_NACK();
 1c2:	de df       	rcall	.-68     	; 0x180 <I2C_READ_ACK>
 1c4:	c8 2f       	mov	r28, r24
 1c6:	e7 df       	rcall	.-50     	; 0x196 <I2C_READ_NACK>
 1c8:	d0 e0       	ldi	r29, 0x00	; 0
 1ca:	dc 2f       	mov	r29, r28
 1cc:	cc 27       	eor	r28, r28
 1ce:	c8 2b       	or	r28, r24
 1d0:	c4 df       	rcall	.-120    	; 0x15a <I2C_STOP>
	I2C_STOP();
 1d2:	ce 01       	movw	r24, r28
 1d4:	df 91       	pop	r29
	return data;
}
 1d6:	cf 91       	pop	r28
 1d8:	08 95       	ret

000001da <__vector_18>:
 1da:	1f 92       	push	r1
 1dc:	0f 92       	push	r0

ISR(USART_RX_vect) {
 1de:	0f b6       	in	r0, 0x3f	; 63
 1e0:	0f 92       	push	r0
 1e2:	11 24       	eor	r1, r1
 1e4:	8f 93       	push	r24
	Received_char = UDR0;
 1e6:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 1ea:	80 93 35 01 	sts	0x0135, r24	; 0x800135 <Received_char>
	Data_Received = 1;
 1ee:	81 e0       	ldi	r24, 0x01	; 1
 1f0:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <__data_end>
}
 1f4:	8f 91       	pop	r24
 1f6:	0f 90       	pop	r0
 1f8:	0f be       	out	0x3f, r0	; 63
 1fa:	0f 90       	pop	r0
 1fc:	1f 90       	pop	r1
 1fe:	18 95       	reti

00000200 <main>:

int main(void) {
	sei();
 200:	78 94       	sei
	UART_INIT();
 202:	4e df       	rcall	.-356    	; 0xa0 <UART_INIT>
	I2C_INIT();
 204:	9b df       	rcall	.-202    	; 0x13c <I2C_INIT>
 206:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <__data_end>

	while (1) {
		if (Data_Received) {
 20a:	88 23       	and	r24, r24
 20c:	e1 f3       	breq	.-8      	; 0x206 <main+0x6>
			int16_t gyro_x = read_mpu9250_register16(0x43);
 20e:	83 e4       	ldi	r24, 0x43	; 67
 210:	cd df       	rcall	.-102    	; 0x1ac <read_mpu9250_register16>
 212:	6c 01       	movw	r12, r24
			int16_t gyro_y = read_mpu9250_register16(0x45);
 214:	85 e4       	ldi	r24, 0x45	; 69
 216:	ca df       	rcall	.-108    	; 0x1ac <read_mpu9250_register16>
 218:	7c 01       	movw	r14, r24
			int16_t gyro_z = read_mpu9250_register16(0x47);
 21a:	87 e4       	ldi	r24, 0x47	; 71
 21c:	c7 df       	rcall	.-114    	; 0x1ac <read_mpu9250_register16>
 21e:	8c 01       	movw	r16, r24
			int16_t acc_x = read_mpu9250_register16(0x3B);
 220:	8b e3       	ldi	r24, 0x3B	; 59
 222:	c4 df       	rcall	.-120    	; 0x1ac <read_mpu9250_register16>
 224:	ec 01       	movw	r28, r24
			int16_t acc_y = read_mpu9250_register16(0x3D);
 226:	8d e3       	ldi	r24, 0x3D	; 61
 228:	c1 df       	rcall	.-126    	; 0x1ac <read_mpu9250_register16>
			int16_t acc_z = read_mpu9250_register16(0x3F);
 22a:	8f e3       	ldi	r24, 0x3F	; 63
 22c:	bf df       	rcall	.-130    	; 0x1ac <read_mpu9250_register16>

			UART_Transmit_data("Gyro_X:", gyro_x);
 22e:	b6 01       	movw	r22, r12
 230:	86 e0       	ldi	r24, 0x06	; 6
 232:	91 e0       	ldi	r25, 0x01	; 1
			UART_Transmit_char('\t');
 234:	57 df       	rcall	.-338    	; 0xe4 <UART_Transmit_data>
 236:	89 e0       	ldi	r24, 0x09	; 9
			UART_Transmit_data("Gyro_Y:", gyro_y);
 238:	3f df       	rcall	.-386    	; 0xb8 <UART_Transmit_char>
 23a:	b7 01       	movw	r22, r14
 23c:	8e e0       	ldi	r24, 0x0E	; 14
 23e:	91 e0       	ldi	r25, 0x01	; 1
			UART_Transmit_char('\t');
 240:	51 df       	rcall	.-350    	; 0xe4 <UART_Transmit_data>
 242:	89 e0       	ldi	r24, 0x09	; 9
			UART_Transmit_data("Gyro_Z:", gyro_z);
 244:	39 df       	rcall	.-398    	; 0xb8 <UART_Transmit_char>
 246:	b8 01       	movw	r22, r16
 248:	86 e1       	ldi	r24, 0x16	; 22
 24a:	91 e0       	ldi	r25, 0x01	; 1
			UART_Transmit_char('\n');
 24c:	4b df       	rcall	.-362    	; 0xe4 <UART_Transmit_data>
 24e:	8a e0       	ldi	r24, 0x0A	; 10
			
			UART_Transmit_data("ACC_X:", acc_x);
 250:	33 df       	rcall	.-410    	; 0xb8 <UART_Transmit_char>
 252:	be 01       	movw	r22, r28
 254:	8e e1       	ldi	r24, 0x1E	; 30
			UART_Transmit_char('\t');
 256:	91 e0       	ldi	r25, 0x01	; 1
 258:	45 df       	rcall	.-374    	; 0xe4 <UART_Transmit_data>
 25a:	89 e0       	ldi	r24, 0x09	; 9
			UART_Transmit_data("ACC_Y:", acc_x);
 25c:	2d df       	rcall	.-422    	; 0xb8 <UART_Transmit_char>
 25e:	be 01       	movw	r22, r28
 260:	85 e2       	ldi	r24, 0x25	; 37
 262:	91 e0       	ldi	r25, 0x01	; 1
 264:	3f df       	rcall	.-386    	; 0xe4 <UART_Transmit_data>
			UART_Transmit_char('\t');
 266:	89 e0       	ldi	r24, 0x09	; 9
 268:	27 df       	rcall	.-434    	; 0xb8 <UART_Transmit_char>
 26a:	be 01       	movw	r22, r28
			UART_Transmit_data("ACC_Z:", acc_x);
 26c:	8c e2       	ldi	r24, 0x2C	; 44
 26e:	91 e0       	ldi	r25, 0x01	; 1
 270:	39 df       	rcall	.-398    	; 0xe4 <UART_Transmit_data>
 272:	8a e0       	ldi	r24, 0x0A	; 10
 274:	21 df       	rcall	.-446    	; 0xb8 <UART_Transmit_char>
			UART_Transmit_char('\n');
 276:	10 92 34 01 	sts	0x0134, r1	; 0x800134 <__data_end>
 27a:	c5 cf       	rjmp	.-118    	; 0x206 <main+0x6>

0000027c <sprintf>:
			Data_Received = 0;
 27c:	ae e0       	ldi	r26, 0x0E	; 14
 27e:	b0 e0       	ldi	r27, 0x00	; 0
 280:	e3 e4       	ldi	r30, 0x43	; 67
 282:	f1 e0       	ldi	r31, 0x01	; 1
 284:	aa c2       	rjmp	.+1364   	; 0x7da <__prologue_saves__+0x1c>
 286:	0d 89       	ldd	r16, Y+21	; 0x15
 288:	1e 89       	ldd	r17, Y+22	; 0x16
 28a:	86 e0       	ldi	r24, 0x06	; 6
 28c:	8c 83       	std	Y+4, r24	; 0x04
 28e:	1a 83       	std	Y+2, r17	; 0x02
 290:	09 83       	std	Y+1, r16	; 0x01
 292:	8f ef       	ldi	r24, 0xFF	; 255
 294:	9f e7       	ldi	r25, 0x7F	; 127
 296:	9e 83       	std	Y+6, r25	; 0x06
 298:	8d 83       	std	Y+5, r24	; 0x05
 29a:	ae 01       	movw	r20, r28
 29c:	47 5e       	subi	r20, 0xE7	; 231
 29e:	5f 4f       	sbci	r21, 0xFF	; 255
 2a0:	6f 89       	ldd	r22, Y+23	; 0x17
 2a2:	78 8d       	ldd	r23, Y+24	; 0x18
 2a4:	ce 01       	movw	r24, r28
 2a6:	01 96       	adiw	r24, 0x01	; 1
 2a8:	08 d0       	rcall	.+16     	; 0x2ba <vfprintf>
 2aa:	ef 81       	ldd	r30, Y+7	; 0x07
 2ac:	f8 85       	ldd	r31, Y+8	; 0x08
 2ae:	e0 0f       	add	r30, r16
 2b0:	f1 1f       	adc	r31, r17
 2b2:	10 82       	st	Z, r1
 2b4:	2e 96       	adiw	r28, 0x0e	; 14
 2b6:	e4 e0       	ldi	r30, 0x04	; 4
 2b8:	ac c2       	rjmp	.+1368   	; 0x812 <__DATA_REGION_LENGTH__+0x12>

000002ba <vfprintf>:
 2ba:	ab e0       	ldi	r26, 0x0B	; 11
 2bc:	b0 e0       	ldi	r27, 0x00	; 0
 2be:	e2 e6       	ldi	r30, 0x62	; 98
 2c0:	f1 e0       	ldi	r31, 0x01	; 1
 2c2:	7d c2       	rjmp	.+1274   	; 0x7be <__prologue_saves__>
 2c4:	6c 01       	movw	r12, r24
 2c6:	7b 01       	movw	r14, r22
 2c8:	8a 01       	movw	r16, r20
 2ca:	fc 01       	movw	r30, r24
 2cc:	17 82       	std	Z+7, r1	; 0x07
 2ce:	16 82       	std	Z+6, r1	; 0x06
 2d0:	83 81       	ldd	r24, Z+3	; 0x03
 2d2:	81 ff       	sbrs	r24, 1
 2d4:	bf c1       	rjmp	.+894    	; 0x654 <__EEPROM_REGION_LENGTH__+0x254>
 2d6:	ce 01       	movw	r24, r28
 2d8:	01 96       	adiw	r24, 0x01	; 1
 2da:	3c 01       	movw	r6, r24
 2dc:	f6 01       	movw	r30, r12
 2de:	93 81       	ldd	r25, Z+3	; 0x03
 2e0:	f7 01       	movw	r30, r14
 2e2:	93 fd       	sbrc	r25, 3
 2e4:	85 91       	lpm	r24, Z+
 2e6:	93 ff       	sbrs	r25, 3
 2e8:	81 91       	ld	r24, Z+
 2ea:	7f 01       	movw	r14, r30
 2ec:	88 23       	and	r24, r24
 2ee:	09 f4       	brne	.+2      	; 0x2f2 <vfprintf+0x38>
 2f0:	ad c1       	rjmp	.+858    	; 0x64c <__EEPROM_REGION_LENGTH__+0x24c>
 2f2:	85 32       	cpi	r24, 0x25	; 37
 2f4:	39 f4       	brne	.+14     	; 0x304 <vfprintf+0x4a>
 2f6:	93 fd       	sbrc	r25, 3
 2f8:	85 91       	lpm	r24, Z+
 2fa:	93 ff       	sbrs	r25, 3
 2fc:	81 91       	ld	r24, Z+
 2fe:	7f 01       	movw	r14, r30
 300:	85 32       	cpi	r24, 0x25	; 37
 302:	21 f4       	brne	.+8      	; 0x30c <vfprintf+0x52>
 304:	b6 01       	movw	r22, r12
 306:	90 e0       	ldi	r25, 0x00	; 0
 308:	c0 d1       	rcall	.+896    	; 0x68a <fputc>
 30a:	e8 cf       	rjmp	.-48     	; 0x2dc <vfprintf+0x22>
 30c:	91 2c       	mov	r9, r1
 30e:	21 2c       	mov	r2, r1
 310:	31 2c       	mov	r3, r1
 312:	ff e1       	ldi	r31, 0x1F	; 31
 314:	f3 15       	cp	r31, r3
 316:	d8 f0       	brcs	.+54     	; 0x34e <vfprintf+0x94>
 318:	8b 32       	cpi	r24, 0x2B	; 43
 31a:	79 f0       	breq	.+30     	; 0x33a <vfprintf+0x80>
 31c:	38 f4       	brcc	.+14     	; 0x32c <vfprintf+0x72>
 31e:	80 32       	cpi	r24, 0x20	; 32
 320:	79 f0       	breq	.+30     	; 0x340 <vfprintf+0x86>
 322:	83 32       	cpi	r24, 0x23	; 35
 324:	a1 f4       	brne	.+40     	; 0x34e <vfprintf+0x94>
 326:	23 2d       	mov	r18, r3
 328:	20 61       	ori	r18, 0x10	; 16
 32a:	1d c0       	rjmp	.+58     	; 0x366 <vfprintf+0xac>
 32c:	8d 32       	cpi	r24, 0x2D	; 45
 32e:	61 f0       	breq	.+24     	; 0x348 <vfprintf+0x8e>
 330:	80 33       	cpi	r24, 0x30	; 48
 332:	69 f4       	brne	.+26     	; 0x34e <vfprintf+0x94>
 334:	23 2d       	mov	r18, r3
 336:	21 60       	ori	r18, 0x01	; 1
 338:	16 c0       	rjmp	.+44     	; 0x366 <vfprintf+0xac>
 33a:	83 2d       	mov	r24, r3
 33c:	82 60       	ori	r24, 0x02	; 2
 33e:	38 2e       	mov	r3, r24
 340:	e3 2d       	mov	r30, r3
 342:	e4 60       	ori	r30, 0x04	; 4
 344:	3e 2e       	mov	r3, r30
 346:	2a c0       	rjmp	.+84     	; 0x39c <vfprintf+0xe2>
 348:	f3 2d       	mov	r31, r3
 34a:	f8 60       	ori	r31, 0x08	; 8
 34c:	1d c0       	rjmp	.+58     	; 0x388 <vfprintf+0xce>
 34e:	37 fc       	sbrc	r3, 7
 350:	2d c0       	rjmp	.+90     	; 0x3ac <vfprintf+0xf2>
 352:	20 ed       	ldi	r18, 0xD0	; 208
 354:	28 0f       	add	r18, r24
 356:	2a 30       	cpi	r18, 0x0A	; 10
 358:	40 f0       	brcs	.+16     	; 0x36a <vfprintf+0xb0>
 35a:	8e 32       	cpi	r24, 0x2E	; 46
 35c:	b9 f4       	brne	.+46     	; 0x38c <vfprintf+0xd2>
 35e:	36 fc       	sbrc	r3, 6
 360:	75 c1       	rjmp	.+746    	; 0x64c <__EEPROM_REGION_LENGTH__+0x24c>
 362:	23 2d       	mov	r18, r3
 364:	20 64       	ori	r18, 0x40	; 64
 366:	32 2e       	mov	r3, r18
 368:	19 c0       	rjmp	.+50     	; 0x39c <vfprintf+0xe2>
 36a:	36 fe       	sbrs	r3, 6
 36c:	06 c0       	rjmp	.+12     	; 0x37a <vfprintf+0xc0>
 36e:	8a e0       	ldi	r24, 0x0A	; 10
 370:	98 9e       	mul	r9, r24
 372:	20 0d       	add	r18, r0
 374:	11 24       	eor	r1, r1
 376:	92 2e       	mov	r9, r18
 378:	11 c0       	rjmp	.+34     	; 0x39c <vfprintf+0xe2>
 37a:	ea e0       	ldi	r30, 0x0A	; 10
 37c:	2e 9e       	mul	r2, r30
 37e:	20 0d       	add	r18, r0
 380:	11 24       	eor	r1, r1
 382:	22 2e       	mov	r2, r18
 384:	f3 2d       	mov	r31, r3
 386:	f0 62       	ori	r31, 0x20	; 32
 388:	3f 2e       	mov	r3, r31
 38a:	08 c0       	rjmp	.+16     	; 0x39c <vfprintf+0xe2>
 38c:	8c 36       	cpi	r24, 0x6C	; 108
 38e:	21 f4       	brne	.+8      	; 0x398 <vfprintf+0xde>
 390:	83 2d       	mov	r24, r3
 392:	80 68       	ori	r24, 0x80	; 128
 394:	38 2e       	mov	r3, r24
 396:	02 c0       	rjmp	.+4      	; 0x39c <vfprintf+0xe2>
 398:	88 36       	cpi	r24, 0x68	; 104
 39a:	41 f4       	brne	.+16     	; 0x3ac <vfprintf+0xf2>
 39c:	f7 01       	movw	r30, r14
 39e:	93 fd       	sbrc	r25, 3
 3a0:	85 91       	lpm	r24, Z+
 3a2:	93 ff       	sbrs	r25, 3
 3a4:	81 91       	ld	r24, Z+
 3a6:	7f 01       	movw	r14, r30
 3a8:	81 11       	cpse	r24, r1
 3aa:	b3 cf       	rjmp	.-154    	; 0x312 <vfprintf+0x58>
 3ac:	98 2f       	mov	r25, r24
 3ae:	9f 7d       	andi	r25, 0xDF	; 223
 3b0:	95 54       	subi	r25, 0x45	; 69
 3b2:	93 30       	cpi	r25, 0x03	; 3
 3b4:	28 f4       	brcc	.+10     	; 0x3c0 <vfprintf+0x106>
 3b6:	0c 5f       	subi	r16, 0xFC	; 252
 3b8:	1f 4f       	sbci	r17, 0xFF	; 255
 3ba:	9f e3       	ldi	r25, 0x3F	; 63
 3bc:	99 83       	std	Y+1, r25	; 0x01
 3be:	0d c0       	rjmp	.+26     	; 0x3da <vfprintf+0x120>
 3c0:	83 36       	cpi	r24, 0x63	; 99
 3c2:	31 f0       	breq	.+12     	; 0x3d0 <vfprintf+0x116>
 3c4:	83 37       	cpi	r24, 0x73	; 115
 3c6:	71 f0       	breq	.+28     	; 0x3e4 <vfprintf+0x12a>
 3c8:	83 35       	cpi	r24, 0x53	; 83
 3ca:	09 f0       	breq	.+2      	; 0x3ce <vfprintf+0x114>
 3cc:	55 c0       	rjmp	.+170    	; 0x478 <__EEPROM_REGION_LENGTH__+0x78>
 3ce:	20 c0       	rjmp	.+64     	; 0x410 <__EEPROM_REGION_LENGTH__+0x10>
 3d0:	f8 01       	movw	r30, r16
 3d2:	80 81       	ld	r24, Z
 3d4:	89 83       	std	Y+1, r24	; 0x01
 3d6:	0e 5f       	subi	r16, 0xFE	; 254
 3d8:	1f 4f       	sbci	r17, 0xFF	; 255
 3da:	88 24       	eor	r8, r8
 3dc:	83 94       	inc	r8
 3de:	91 2c       	mov	r9, r1
 3e0:	53 01       	movw	r10, r6
 3e2:	12 c0       	rjmp	.+36     	; 0x408 <__EEPROM_REGION_LENGTH__+0x8>
 3e4:	28 01       	movw	r4, r16
 3e6:	f2 e0       	ldi	r31, 0x02	; 2
 3e8:	4f 0e       	add	r4, r31
 3ea:	51 1c       	adc	r5, r1
 3ec:	f8 01       	movw	r30, r16
 3ee:	a0 80       	ld	r10, Z
 3f0:	b1 80       	ldd	r11, Z+1	; 0x01
 3f2:	36 fe       	sbrs	r3, 6
 3f4:	03 c0       	rjmp	.+6      	; 0x3fc <vfprintf+0x142>
 3f6:	69 2d       	mov	r22, r9
 3f8:	70 e0       	ldi	r23, 0x00	; 0
 3fa:	02 c0       	rjmp	.+4      	; 0x400 <__EEPROM_REGION_LENGTH__>
 3fc:	6f ef       	ldi	r22, 0xFF	; 255
 3fe:	7f ef       	ldi	r23, 0xFF	; 255
 400:	c5 01       	movw	r24, r10
 402:	38 d1       	rcall	.+624    	; 0x674 <strnlen>
 404:	4c 01       	movw	r8, r24
 406:	82 01       	movw	r16, r4
 408:	f3 2d       	mov	r31, r3
 40a:	ff 77       	andi	r31, 0x7F	; 127
 40c:	3f 2e       	mov	r3, r31
 40e:	15 c0       	rjmp	.+42     	; 0x43a <__EEPROM_REGION_LENGTH__+0x3a>
 410:	28 01       	movw	r4, r16
 412:	22 e0       	ldi	r18, 0x02	; 2
 414:	42 0e       	add	r4, r18
 416:	51 1c       	adc	r5, r1
 418:	f8 01       	movw	r30, r16
 41a:	a0 80       	ld	r10, Z
 41c:	b1 80       	ldd	r11, Z+1	; 0x01
 41e:	36 fe       	sbrs	r3, 6
 420:	03 c0       	rjmp	.+6      	; 0x428 <__EEPROM_REGION_LENGTH__+0x28>
 422:	69 2d       	mov	r22, r9
 424:	70 e0       	ldi	r23, 0x00	; 0
 426:	02 c0       	rjmp	.+4      	; 0x42c <__EEPROM_REGION_LENGTH__+0x2c>
 428:	6f ef       	ldi	r22, 0xFF	; 255
 42a:	7f ef       	ldi	r23, 0xFF	; 255
 42c:	c5 01       	movw	r24, r10
 42e:	17 d1       	rcall	.+558    	; 0x65e <strnlen_P>
 430:	4c 01       	movw	r8, r24
 432:	f3 2d       	mov	r31, r3
 434:	f0 68       	ori	r31, 0x80	; 128
 436:	3f 2e       	mov	r3, r31
 438:	82 01       	movw	r16, r4
 43a:	33 fc       	sbrc	r3, 3
 43c:	19 c0       	rjmp	.+50     	; 0x470 <__EEPROM_REGION_LENGTH__+0x70>
 43e:	82 2d       	mov	r24, r2
 440:	90 e0       	ldi	r25, 0x00	; 0
 442:	88 16       	cp	r8, r24
 444:	99 06       	cpc	r9, r25
 446:	a0 f4       	brcc	.+40     	; 0x470 <__EEPROM_REGION_LENGTH__+0x70>
 448:	b6 01       	movw	r22, r12
 44a:	80 e2       	ldi	r24, 0x20	; 32
 44c:	90 e0       	ldi	r25, 0x00	; 0
 44e:	1d d1       	rcall	.+570    	; 0x68a <fputc>
 450:	2a 94       	dec	r2
 452:	f5 cf       	rjmp	.-22     	; 0x43e <__EEPROM_REGION_LENGTH__+0x3e>
 454:	f5 01       	movw	r30, r10
 456:	37 fc       	sbrc	r3, 7
 458:	85 91       	lpm	r24, Z+
 45a:	37 fe       	sbrs	r3, 7
 45c:	81 91       	ld	r24, Z+
 45e:	5f 01       	movw	r10, r30
 460:	b6 01       	movw	r22, r12
 462:	90 e0       	ldi	r25, 0x00	; 0
 464:	12 d1       	rcall	.+548    	; 0x68a <fputc>
 466:	21 10       	cpse	r2, r1
 468:	2a 94       	dec	r2
 46a:	21 e0       	ldi	r18, 0x01	; 1
 46c:	82 1a       	sub	r8, r18
 46e:	91 08       	sbc	r9, r1
 470:	81 14       	cp	r8, r1
 472:	91 04       	cpc	r9, r1
 474:	79 f7       	brne	.-34     	; 0x454 <__EEPROM_REGION_LENGTH__+0x54>
 476:	e1 c0       	rjmp	.+450    	; 0x63a <__EEPROM_REGION_LENGTH__+0x23a>
 478:	84 36       	cpi	r24, 0x64	; 100
 47a:	11 f0       	breq	.+4      	; 0x480 <__EEPROM_REGION_LENGTH__+0x80>
 47c:	89 36       	cpi	r24, 0x69	; 105
 47e:	39 f5       	brne	.+78     	; 0x4ce <__EEPROM_REGION_LENGTH__+0xce>
 480:	f8 01       	movw	r30, r16
 482:	37 fe       	sbrs	r3, 7
 484:	07 c0       	rjmp	.+14     	; 0x494 <__EEPROM_REGION_LENGTH__+0x94>
 486:	60 81       	ld	r22, Z
 488:	71 81       	ldd	r23, Z+1	; 0x01
 48a:	82 81       	ldd	r24, Z+2	; 0x02
 48c:	93 81       	ldd	r25, Z+3	; 0x03
 48e:	0c 5f       	subi	r16, 0xFC	; 252
 490:	1f 4f       	sbci	r17, 0xFF	; 255
 492:	08 c0       	rjmp	.+16     	; 0x4a4 <__EEPROM_REGION_LENGTH__+0xa4>
 494:	60 81       	ld	r22, Z
 496:	71 81       	ldd	r23, Z+1	; 0x01
 498:	07 2e       	mov	r0, r23
 49a:	00 0c       	add	r0, r0
 49c:	88 0b       	sbc	r24, r24
 49e:	99 0b       	sbc	r25, r25
 4a0:	0e 5f       	subi	r16, 0xFE	; 254
 4a2:	1f 4f       	sbci	r17, 0xFF	; 255
 4a4:	f3 2d       	mov	r31, r3
 4a6:	ff 76       	andi	r31, 0x6F	; 111
 4a8:	3f 2e       	mov	r3, r31
 4aa:	97 ff       	sbrs	r25, 7
 4ac:	09 c0       	rjmp	.+18     	; 0x4c0 <__EEPROM_REGION_LENGTH__+0xc0>
 4ae:	90 95       	com	r25
 4b0:	80 95       	com	r24
 4b2:	70 95       	com	r23
 4b4:	61 95       	neg	r22
 4b6:	7f 4f       	sbci	r23, 0xFF	; 255
 4b8:	8f 4f       	sbci	r24, 0xFF	; 255
 4ba:	9f 4f       	sbci	r25, 0xFF	; 255
 4bc:	f0 68       	ori	r31, 0x80	; 128
 4be:	3f 2e       	mov	r3, r31
 4c0:	2a e0       	ldi	r18, 0x0A	; 10
 4c2:	30 e0       	ldi	r19, 0x00	; 0
 4c4:	a3 01       	movw	r20, r6
 4c6:	1d d1       	rcall	.+570    	; 0x702 <__ultoa_invert>
 4c8:	88 2e       	mov	r8, r24
 4ca:	86 18       	sub	r8, r6
 4cc:	44 c0       	rjmp	.+136    	; 0x556 <__EEPROM_REGION_LENGTH__+0x156>
 4ce:	85 37       	cpi	r24, 0x75	; 117
 4d0:	31 f4       	brne	.+12     	; 0x4de <__EEPROM_REGION_LENGTH__+0xde>
 4d2:	23 2d       	mov	r18, r3
 4d4:	2f 7e       	andi	r18, 0xEF	; 239
 4d6:	b2 2e       	mov	r11, r18
 4d8:	2a e0       	ldi	r18, 0x0A	; 10
 4da:	30 e0       	ldi	r19, 0x00	; 0
 4dc:	25 c0       	rjmp	.+74     	; 0x528 <__EEPROM_REGION_LENGTH__+0x128>
 4de:	93 2d       	mov	r25, r3
 4e0:	99 7f       	andi	r25, 0xF9	; 249
 4e2:	b9 2e       	mov	r11, r25
 4e4:	8f 36       	cpi	r24, 0x6F	; 111
 4e6:	c1 f0       	breq	.+48     	; 0x518 <__EEPROM_REGION_LENGTH__+0x118>
 4e8:	18 f4       	brcc	.+6      	; 0x4f0 <__EEPROM_REGION_LENGTH__+0xf0>
 4ea:	88 35       	cpi	r24, 0x58	; 88
 4ec:	79 f0       	breq	.+30     	; 0x50c <__EEPROM_REGION_LENGTH__+0x10c>
 4ee:	ae c0       	rjmp	.+348    	; 0x64c <__EEPROM_REGION_LENGTH__+0x24c>
 4f0:	80 37       	cpi	r24, 0x70	; 112
 4f2:	19 f0       	breq	.+6      	; 0x4fa <__EEPROM_REGION_LENGTH__+0xfa>
 4f4:	88 37       	cpi	r24, 0x78	; 120
 4f6:	21 f0       	breq	.+8      	; 0x500 <__EEPROM_REGION_LENGTH__+0x100>
 4f8:	a9 c0       	rjmp	.+338    	; 0x64c <__EEPROM_REGION_LENGTH__+0x24c>
 4fa:	e9 2f       	mov	r30, r25
 4fc:	e0 61       	ori	r30, 0x10	; 16
 4fe:	be 2e       	mov	r11, r30
 500:	b4 fe       	sbrs	r11, 4
 502:	0d c0       	rjmp	.+26     	; 0x51e <__EEPROM_REGION_LENGTH__+0x11e>
 504:	fb 2d       	mov	r31, r11
 506:	f4 60       	ori	r31, 0x04	; 4
 508:	bf 2e       	mov	r11, r31
 50a:	09 c0       	rjmp	.+18     	; 0x51e <__EEPROM_REGION_LENGTH__+0x11e>
 50c:	34 fe       	sbrs	r3, 4
 50e:	0a c0       	rjmp	.+20     	; 0x524 <__EEPROM_REGION_LENGTH__+0x124>
 510:	29 2f       	mov	r18, r25
 512:	26 60       	ori	r18, 0x06	; 6
 514:	b2 2e       	mov	r11, r18
 516:	06 c0       	rjmp	.+12     	; 0x524 <__EEPROM_REGION_LENGTH__+0x124>
 518:	28 e0       	ldi	r18, 0x08	; 8
 51a:	30 e0       	ldi	r19, 0x00	; 0
 51c:	05 c0       	rjmp	.+10     	; 0x528 <__EEPROM_REGION_LENGTH__+0x128>
 51e:	20 e1       	ldi	r18, 0x10	; 16
 520:	30 e0       	ldi	r19, 0x00	; 0
 522:	02 c0       	rjmp	.+4      	; 0x528 <__EEPROM_REGION_LENGTH__+0x128>
 524:	20 e1       	ldi	r18, 0x10	; 16
 526:	32 e0       	ldi	r19, 0x02	; 2
 528:	f8 01       	movw	r30, r16
 52a:	b7 fe       	sbrs	r11, 7
 52c:	07 c0       	rjmp	.+14     	; 0x53c <__EEPROM_REGION_LENGTH__+0x13c>
 52e:	60 81       	ld	r22, Z
 530:	71 81       	ldd	r23, Z+1	; 0x01
 532:	82 81       	ldd	r24, Z+2	; 0x02
 534:	93 81       	ldd	r25, Z+3	; 0x03
 536:	0c 5f       	subi	r16, 0xFC	; 252
 538:	1f 4f       	sbci	r17, 0xFF	; 255
 53a:	06 c0       	rjmp	.+12     	; 0x548 <__EEPROM_REGION_LENGTH__+0x148>
 53c:	60 81       	ld	r22, Z
 53e:	71 81       	ldd	r23, Z+1	; 0x01
 540:	80 e0       	ldi	r24, 0x00	; 0
 542:	90 e0       	ldi	r25, 0x00	; 0
 544:	0e 5f       	subi	r16, 0xFE	; 254
 546:	1f 4f       	sbci	r17, 0xFF	; 255
 548:	a3 01       	movw	r20, r6
 54a:	db d0       	rcall	.+438    	; 0x702 <__ultoa_invert>
 54c:	88 2e       	mov	r8, r24
 54e:	86 18       	sub	r8, r6
 550:	fb 2d       	mov	r31, r11
 552:	ff 77       	andi	r31, 0x7F	; 127
 554:	3f 2e       	mov	r3, r31
 556:	36 fe       	sbrs	r3, 6
 558:	0d c0       	rjmp	.+26     	; 0x574 <__EEPROM_REGION_LENGTH__+0x174>
 55a:	23 2d       	mov	r18, r3
 55c:	2e 7f       	andi	r18, 0xFE	; 254
 55e:	a2 2e       	mov	r10, r18
 560:	89 14       	cp	r8, r9
 562:	58 f4       	brcc	.+22     	; 0x57a <__EEPROM_REGION_LENGTH__+0x17a>
 564:	34 fe       	sbrs	r3, 4
 566:	0b c0       	rjmp	.+22     	; 0x57e <__EEPROM_REGION_LENGTH__+0x17e>
 568:	32 fc       	sbrc	r3, 2
 56a:	09 c0       	rjmp	.+18     	; 0x57e <__EEPROM_REGION_LENGTH__+0x17e>
 56c:	83 2d       	mov	r24, r3
 56e:	8e 7e       	andi	r24, 0xEE	; 238
 570:	a8 2e       	mov	r10, r24
 572:	05 c0       	rjmp	.+10     	; 0x57e <__EEPROM_REGION_LENGTH__+0x17e>
 574:	b8 2c       	mov	r11, r8
 576:	a3 2c       	mov	r10, r3
 578:	03 c0       	rjmp	.+6      	; 0x580 <__EEPROM_REGION_LENGTH__+0x180>
 57a:	b8 2c       	mov	r11, r8
 57c:	01 c0       	rjmp	.+2      	; 0x580 <__EEPROM_REGION_LENGTH__+0x180>
 57e:	b9 2c       	mov	r11, r9
 580:	a4 fe       	sbrs	r10, 4
 582:	0f c0       	rjmp	.+30     	; 0x5a2 <__EEPROM_REGION_LENGTH__+0x1a2>
 584:	fe 01       	movw	r30, r28
 586:	e8 0d       	add	r30, r8
 588:	f1 1d       	adc	r31, r1
 58a:	80 81       	ld	r24, Z
 58c:	80 33       	cpi	r24, 0x30	; 48
 58e:	21 f4       	brne	.+8      	; 0x598 <__EEPROM_REGION_LENGTH__+0x198>
 590:	9a 2d       	mov	r25, r10
 592:	99 7e       	andi	r25, 0xE9	; 233
 594:	a9 2e       	mov	r10, r25
 596:	09 c0       	rjmp	.+18     	; 0x5aa <__EEPROM_REGION_LENGTH__+0x1aa>
 598:	a2 fe       	sbrs	r10, 2
 59a:	06 c0       	rjmp	.+12     	; 0x5a8 <__EEPROM_REGION_LENGTH__+0x1a8>
 59c:	b3 94       	inc	r11
 59e:	b3 94       	inc	r11
 5a0:	04 c0       	rjmp	.+8      	; 0x5aa <__EEPROM_REGION_LENGTH__+0x1aa>
 5a2:	8a 2d       	mov	r24, r10
 5a4:	86 78       	andi	r24, 0x86	; 134
 5a6:	09 f0       	breq	.+2      	; 0x5aa <__EEPROM_REGION_LENGTH__+0x1aa>
 5a8:	b3 94       	inc	r11
 5aa:	a3 fc       	sbrc	r10, 3
 5ac:	10 c0       	rjmp	.+32     	; 0x5ce <__EEPROM_REGION_LENGTH__+0x1ce>
 5ae:	a0 fe       	sbrs	r10, 0
 5b0:	06 c0       	rjmp	.+12     	; 0x5be <__EEPROM_REGION_LENGTH__+0x1be>
 5b2:	b2 14       	cp	r11, r2
 5b4:	80 f4       	brcc	.+32     	; 0x5d6 <__EEPROM_REGION_LENGTH__+0x1d6>
 5b6:	28 0c       	add	r2, r8
 5b8:	92 2c       	mov	r9, r2
 5ba:	9b 18       	sub	r9, r11
 5bc:	0d c0       	rjmp	.+26     	; 0x5d8 <__EEPROM_REGION_LENGTH__+0x1d8>
 5be:	b2 14       	cp	r11, r2
 5c0:	58 f4       	brcc	.+22     	; 0x5d8 <__EEPROM_REGION_LENGTH__+0x1d8>
 5c2:	b6 01       	movw	r22, r12
 5c4:	80 e2       	ldi	r24, 0x20	; 32
 5c6:	90 e0       	ldi	r25, 0x00	; 0
 5c8:	60 d0       	rcall	.+192    	; 0x68a <fputc>
 5ca:	b3 94       	inc	r11
 5cc:	f8 cf       	rjmp	.-16     	; 0x5be <__EEPROM_REGION_LENGTH__+0x1be>
 5ce:	b2 14       	cp	r11, r2
 5d0:	18 f4       	brcc	.+6      	; 0x5d8 <__EEPROM_REGION_LENGTH__+0x1d8>
 5d2:	2b 18       	sub	r2, r11
 5d4:	02 c0       	rjmp	.+4      	; 0x5da <__EEPROM_REGION_LENGTH__+0x1da>
 5d6:	98 2c       	mov	r9, r8
 5d8:	21 2c       	mov	r2, r1
 5da:	a4 fe       	sbrs	r10, 4
 5dc:	0f c0       	rjmp	.+30     	; 0x5fc <__EEPROM_REGION_LENGTH__+0x1fc>
 5de:	b6 01       	movw	r22, r12
 5e0:	80 e3       	ldi	r24, 0x30	; 48
 5e2:	90 e0       	ldi	r25, 0x00	; 0
 5e4:	52 d0       	rcall	.+164    	; 0x68a <fputc>
 5e6:	a2 fe       	sbrs	r10, 2
 5e8:	16 c0       	rjmp	.+44     	; 0x616 <__EEPROM_REGION_LENGTH__+0x216>
 5ea:	a1 fc       	sbrc	r10, 1
 5ec:	03 c0       	rjmp	.+6      	; 0x5f4 <__EEPROM_REGION_LENGTH__+0x1f4>
 5ee:	88 e7       	ldi	r24, 0x78	; 120
 5f0:	90 e0       	ldi	r25, 0x00	; 0
 5f2:	02 c0       	rjmp	.+4      	; 0x5f8 <__EEPROM_REGION_LENGTH__+0x1f8>
 5f4:	88 e5       	ldi	r24, 0x58	; 88
 5f6:	90 e0       	ldi	r25, 0x00	; 0
 5f8:	b6 01       	movw	r22, r12
 5fa:	0c c0       	rjmp	.+24     	; 0x614 <__EEPROM_REGION_LENGTH__+0x214>
 5fc:	8a 2d       	mov	r24, r10
 5fe:	86 78       	andi	r24, 0x86	; 134
 600:	51 f0       	breq	.+20     	; 0x616 <__EEPROM_REGION_LENGTH__+0x216>
 602:	a1 fe       	sbrs	r10, 1
 604:	02 c0       	rjmp	.+4      	; 0x60a <__EEPROM_REGION_LENGTH__+0x20a>
 606:	8b e2       	ldi	r24, 0x2B	; 43
 608:	01 c0       	rjmp	.+2      	; 0x60c <__EEPROM_REGION_LENGTH__+0x20c>
 60a:	80 e2       	ldi	r24, 0x20	; 32
 60c:	a7 fc       	sbrc	r10, 7
 60e:	8d e2       	ldi	r24, 0x2D	; 45
 610:	b6 01       	movw	r22, r12
 612:	90 e0       	ldi	r25, 0x00	; 0
 614:	3a d0       	rcall	.+116    	; 0x68a <fputc>
 616:	89 14       	cp	r8, r9
 618:	30 f4       	brcc	.+12     	; 0x626 <__EEPROM_REGION_LENGTH__+0x226>
 61a:	b6 01       	movw	r22, r12
 61c:	80 e3       	ldi	r24, 0x30	; 48
 61e:	90 e0       	ldi	r25, 0x00	; 0
 620:	34 d0       	rcall	.+104    	; 0x68a <fputc>
 622:	9a 94       	dec	r9
 624:	f8 cf       	rjmp	.-16     	; 0x616 <__EEPROM_REGION_LENGTH__+0x216>
 626:	8a 94       	dec	r8
 628:	f3 01       	movw	r30, r6
 62a:	e8 0d       	add	r30, r8
 62c:	f1 1d       	adc	r31, r1
 62e:	80 81       	ld	r24, Z
 630:	b6 01       	movw	r22, r12
 632:	90 e0       	ldi	r25, 0x00	; 0
 634:	2a d0       	rcall	.+84     	; 0x68a <fputc>
 636:	81 10       	cpse	r8, r1
 638:	f6 cf       	rjmp	.-20     	; 0x626 <__EEPROM_REGION_LENGTH__+0x226>
 63a:	22 20       	and	r2, r2
 63c:	09 f4       	brne	.+2      	; 0x640 <__EEPROM_REGION_LENGTH__+0x240>
 63e:	4e ce       	rjmp	.-868    	; 0x2dc <vfprintf+0x22>
 640:	b6 01       	movw	r22, r12
 642:	80 e2       	ldi	r24, 0x20	; 32
 644:	90 e0       	ldi	r25, 0x00	; 0
 646:	21 d0       	rcall	.+66     	; 0x68a <fputc>
 648:	2a 94       	dec	r2
 64a:	f7 cf       	rjmp	.-18     	; 0x63a <__EEPROM_REGION_LENGTH__+0x23a>
 64c:	f6 01       	movw	r30, r12
 64e:	86 81       	ldd	r24, Z+6	; 0x06
 650:	97 81       	ldd	r25, Z+7	; 0x07
 652:	02 c0       	rjmp	.+4      	; 0x658 <__EEPROM_REGION_LENGTH__+0x258>
 654:	8f ef       	ldi	r24, 0xFF	; 255
 656:	9f ef       	ldi	r25, 0xFF	; 255
 658:	2b 96       	adiw	r28, 0x0b	; 11
 65a:	e2 e1       	ldi	r30, 0x12	; 18
 65c:	cc c0       	rjmp	.+408    	; 0x7f6 <__epilogue_restores__>

0000065e <strnlen_P>:
 65e:	fc 01       	movw	r30, r24
 660:	05 90       	lpm	r0, Z+
 662:	61 50       	subi	r22, 0x01	; 1
 664:	70 40       	sbci	r23, 0x00	; 0
 666:	01 10       	cpse	r0, r1
 668:	d8 f7       	brcc	.-10     	; 0x660 <strnlen_P+0x2>
 66a:	80 95       	com	r24
 66c:	90 95       	com	r25
 66e:	8e 0f       	add	r24, r30
 670:	9f 1f       	adc	r25, r31
 672:	08 95       	ret

00000674 <strnlen>:
 674:	fc 01       	movw	r30, r24
 676:	61 50       	subi	r22, 0x01	; 1
 678:	70 40       	sbci	r23, 0x00	; 0
 67a:	01 90       	ld	r0, Z+
 67c:	01 10       	cpse	r0, r1
 67e:	d8 f7       	brcc	.-10     	; 0x676 <strnlen+0x2>
 680:	80 95       	com	r24
 682:	90 95       	com	r25
 684:	8e 0f       	add	r24, r30
 686:	9f 1f       	adc	r25, r31
 688:	08 95       	ret

0000068a <fputc>:
 68a:	0f 93       	push	r16
 68c:	1f 93       	push	r17
 68e:	cf 93       	push	r28
 690:	df 93       	push	r29
 692:	fb 01       	movw	r30, r22
 694:	23 81       	ldd	r18, Z+3	; 0x03
 696:	21 fd       	sbrc	r18, 1
 698:	03 c0       	rjmp	.+6      	; 0x6a0 <fputc+0x16>
 69a:	8f ef       	ldi	r24, 0xFF	; 255
 69c:	9f ef       	ldi	r25, 0xFF	; 255
 69e:	2c c0       	rjmp	.+88     	; 0x6f8 <fputc+0x6e>
 6a0:	22 ff       	sbrs	r18, 2
 6a2:	16 c0       	rjmp	.+44     	; 0x6d0 <fputc+0x46>
 6a4:	46 81       	ldd	r20, Z+6	; 0x06
 6a6:	57 81       	ldd	r21, Z+7	; 0x07
 6a8:	24 81       	ldd	r18, Z+4	; 0x04
 6aa:	35 81       	ldd	r19, Z+5	; 0x05
 6ac:	42 17       	cp	r20, r18
 6ae:	53 07       	cpc	r21, r19
 6b0:	44 f4       	brge	.+16     	; 0x6c2 <fputc+0x38>
 6b2:	a0 81       	ld	r26, Z
 6b4:	b1 81       	ldd	r27, Z+1	; 0x01
 6b6:	9d 01       	movw	r18, r26
 6b8:	2f 5f       	subi	r18, 0xFF	; 255
 6ba:	3f 4f       	sbci	r19, 0xFF	; 255
 6bc:	31 83       	std	Z+1, r19	; 0x01
 6be:	20 83       	st	Z, r18
 6c0:	8c 93       	st	X, r24
 6c2:	26 81       	ldd	r18, Z+6	; 0x06
 6c4:	37 81       	ldd	r19, Z+7	; 0x07
 6c6:	2f 5f       	subi	r18, 0xFF	; 255
 6c8:	3f 4f       	sbci	r19, 0xFF	; 255
 6ca:	37 83       	std	Z+7, r19	; 0x07
 6cc:	26 83       	std	Z+6, r18	; 0x06
 6ce:	14 c0       	rjmp	.+40     	; 0x6f8 <fputc+0x6e>
 6d0:	8b 01       	movw	r16, r22
 6d2:	ec 01       	movw	r28, r24
 6d4:	fb 01       	movw	r30, r22
 6d6:	00 84       	ldd	r0, Z+8	; 0x08
 6d8:	f1 85       	ldd	r31, Z+9	; 0x09
 6da:	e0 2d       	mov	r30, r0
 6dc:	09 95       	icall
 6de:	89 2b       	or	r24, r25
 6e0:	e1 f6       	brne	.-72     	; 0x69a <fputc+0x10>
 6e2:	d8 01       	movw	r26, r16
 6e4:	16 96       	adiw	r26, 0x06	; 6
 6e6:	8d 91       	ld	r24, X+
 6e8:	9c 91       	ld	r25, X
 6ea:	17 97       	sbiw	r26, 0x07	; 7
 6ec:	01 96       	adiw	r24, 0x01	; 1
 6ee:	17 96       	adiw	r26, 0x07	; 7
 6f0:	9c 93       	st	X, r25
 6f2:	8e 93       	st	-X, r24
 6f4:	16 97       	sbiw	r26, 0x06	; 6
 6f6:	ce 01       	movw	r24, r28
 6f8:	df 91       	pop	r29
 6fa:	cf 91       	pop	r28
 6fc:	1f 91       	pop	r17
 6fe:	0f 91       	pop	r16
 700:	08 95       	ret

00000702 <__ultoa_invert>:
 702:	fa 01       	movw	r30, r20
 704:	aa 27       	eor	r26, r26
 706:	28 30       	cpi	r18, 0x08	; 8
 708:	51 f1       	breq	.+84     	; 0x75e <__ultoa_invert+0x5c>
 70a:	20 31       	cpi	r18, 0x10	; 16
 70c:	81 f1       	breq	.+96     	; 0x76e <__ultoa_invert+0x6c>
 70e:	e8 94       	clt
 710:	6f 93       	push	r22
 712:	6e 7f       	andi	r22, 0xFE	; 254
 714:	6e 5f       	subi	r22, 0xFE	; 254
 716:	7f 4f       	sbci	r23, 0xFF	; 255
 718:	8f 4f       	sbci	r24, 0xFF	; 255
 71a:	9f 4f       	sbci	r25, 0xFF	; 255
 71c:	af 4f       	sbci	r26, 0xFF	; 255
 71e:	b1 e0       	ldi	r27, 0x01	; 1
 720:	3e d0       	rcall	.+124    	; 0x79e <__ultoa_invert+0x9c>
 722:	b4 e0       	ldi	r27, 0x04	; 4
 724:	3c d0       	rcall	.+120    	; 0x79e <__ultoa_invert+0x9c>
 726:	67 0f       	add	r22, r23
 728:	78 1f       	adc	r23, r24
 72a:	89 1f       	adc	r24, r25
 72c:	9a 1f       	adc	r25, r26
 72e:	a1 1d       	adc	r26, r1
 730:	68 0f       	add	r22, r24
 732:	79 1f       	adc	r23, r25
 734:	8a 1f       	adc	r24, r26
 736:	91 1d       	adc	r25, r1
 738:	a1 1d       	adc	r26, r1
 73a:	6a 0f       	add	r22, r26
 73c:	71 1d       	adc	r23, r1
 73e:	81 1d       	adc	r24, r1
 740:	91 1d       	adc	r25, r1
 742:	a1 1d       	adc	r26, r1
 744:	20 d0       	rcall	.+64     	; 0x786 <__ultoa_invert+0x84>
 746:	09 f4       	brne	.+2      	; 0x74a <__ultoa_invert+0x48>
 748:	68 94       	set
 74a:	3f 91       	pop	r19
 74c:	2a e0       	ldi	r18, 0x0A	; 10
 74e:	26 9f       	mul	r18, r22
 750:	11 24       	eor	r1, r1
 752:	30 19       	sub	r19, r0
 754:	30 5d       	subi	r19, 0xD0	; 208
 756:	31 93       	st	Z+, r19
 758:	de f6       	brtc	.-74     	; 0x710 <__ultoa_invert+0xe>
 75a:	cf 01       	movw	r24, r30
 75c:	08 95       	ret
 75e:	46 2f       	mov	r20, r22
 760:	47 70       	andi	r20, 0x07	; 7
 762:	40 5d       	subi	r20, 0xD0	; 208
 764:	41 93       	st	Z+, r20
 766:	b3 e0       	ldi	r27, 0x03	; 3
 768:	0f d0       	rcall	.+30     	; 0x788 <__ultoa_invert+0x86>
 76a:	c9 f7       	brne	.-14     	; 0x75e <__ultoa_invert+0x5c>
 76c:	f6 cf       	rjmp	.-20     	; 0x75a <__ultoa_invert+0x58>
 76e:	46 2f       	mov	r20, r22
 770:	4f 70       	andi	r20, 0x0F	; 15
 772:	40 5d       	subi	r20, 0xD0	; 208
 774:	4a 33       	cpi	r20, 0x3A	; 58
 776:	18 f0       	brcs	.+6      	; 0x77e <__ultoa_invert+0x7c>
 778:	49 5d       	subi	r20, 0xD9	; 217
 77a:	31 fd       	sbrc	r19, 1
 77c:	40 52       	subi	r20, 0x20	; 32
 77e:	41 93       	st	Z+, r20
 780:	02 d0       	rcall	.+4      	; 0x786 <__ultoa_invert+0x84>
 782:	a9 f7       	brne	.-22     	; 0x76e <__ultoa_invert+0x6c>
 784:	ea cf       	rjmp	.-44     	; 0x75a <__ultoa_invert+0x58>
 786:	b4 e0       	ldi	r27, 0x04	; 4
 788:	a6 95       	lsr	r26
 78a:	97 95       	ror	r25
 78c:	87 95       	ror	r24
 78e:	77 95       	ror	r23
 790:	67 95       	ror	r22
 792:	ba 95       	dec	r27
 794:	c9 f7       	brne	.-14     	; 0x788 <__ultoa_invert+0x86>
 796:	00 97       	sbiw	r24, 0x00	; 0
 798:	61 05       	cpc	r22, r1
 79a:	71 05       	cpc	r23, r1
 79c:	08 95       	ret
 79e:	9b 01       	movw	r18, r22
 7a0:	ac 01       	movw	r20, r24
 7a2:	0a 2e       	mov	r0, r26
 7a4:	06 94       	lsr	r0
 7a6:	57 95       	ror	r21
 7a8:	47 95       	ror	r20
 7aa:	37 95       	ror	r19
 7ac:	27 95       	ror	r18
 7ae:	ba 95       	dec	r27
 7b0:	c9 f7       	brne	.-14     	; 0x7a4 <__ultoa_invert+0xa2>
 7b2:	62 0f       	add	r22, r18
 7b4:	73 1f       	adc	r23, r19
 7b6:	84 1f       	adc	r24, r20
 7b8:	95 1f       	adc	r25, r21
 7ba:	a0 1d       	adc	r26, r0
 7bc:	08 95       	ret

000007be <__prologue_saves__>:
 7be:	2f 92       	push	r2
 7c0:	3f 92       	push	r3
 7c2:	4f 92       	push	r4
 7c4:	5f 92       	push	r5
 7c6:	6f 92       	push	r6
 7c8:	7f 92       	push	r7
 7ca:	8f 92       	push	r8
 7cc:	9f 92       	push	r9
 7ce:	af 92       	push	r10
 7d0:	bf 92       	push	r11
 7d2:	cf 92       	push	r12
 7d4:	df 92       	push	r13
 7d6:	ef 92       	push	r14
 7d8:	ff 92       	push	r15
 7da:	0f 93       	push	r16
 7dc:	1f 93       	push	r17
 7de:	cf 93       	push	r28
 7e0:	df 93       	push	r29
 7e2:	cd b7       	in	r28, 0x3d	; 61
 7e4:	de b7       	in	r29, 0x3e	; 62
 7e6:	ca 1b       	sub	r28, r26
 7e8:	db 0b       	sbc	r29, r27
 7ea:	0f b6       	in	r0, 0x3f	; 63
 7ec:	f8 94       	cli
 7ee:	de bf       	out	0x3e, r29	; 62
 7f0:	0f be       	out	0x3f, r0	; 63
 7f2:	cd bf       	out	0x3d, r28	; 61
 7f4:	09 94       	ijmp

000007f6 <__epilogue_restores__>:
 7f6:	2a 88       	ldd	r2, Y+18	; 0x12
 7f8:	39 88       	ldd	r3, Y+17	; 0x11
 7fa:	48 88       	ldd	r4, Y+16	; 0x10
 7fc:	5f 84       	ldd	r5, Y+15	; 0x0f
 7fe:	6e 84       	ldd	r6, Y+14	; 0x0e
 800:	7d 84       	ldd	r7, Y+13	; 0x0d
 802:	8c 84       	ldd	r8, Y+12	; 0x0c
 804:	9b 84       	ldd	r9, Y+11	; 0x0b
 806:	aa 84       	ldd	r10, Y+10	; 0x0a
 808:	b9 84       	ldd	r11, Y+9	; 0x09
 80a:	c8 84       	ldd	r12, Y+8	; 0x08
 80c:	df 80       	ldd	r13, Y+7	; 0x07
 80e:	ee 80       	ldd	r14, Y+6	; 0x06
 810:	fd 80       	ldd	r15, Y+5	; 0x05
 812:	0c 81       	ldd	r16, Y+4	; 0x04
 814:	1b 81       	ldd	r17, Y+3	; 0x03
 816:	aa 81       	ldd	r26, Y+2	; 0x02
 818:	b9 81       	ldd	r27, Y+1	; 0x01
 81a:	ce 0f       	add	r28, r30
 81c:	d1 1d       	adc	r29, r1
 81e:	0f b6       	in	r0, 0x3f	; 63
 820:	f8 94       	cli
 822:	de bf       	out	0x3e, r29	; 62
 824:	0f be       	out	0x3f, r0	; 63
 826:	cd bf       	out	0x3d, r28	; 61
 828:	ed 01       	movw	r28, r26
 82a:	08 95       	ret

0000082c <_exit>:
 82c:	f8 94       	cli

0000082e <__stop_program>:
 82e:	ff cf       	rjmp	.-2      	; 0x82e <__stop_program>
